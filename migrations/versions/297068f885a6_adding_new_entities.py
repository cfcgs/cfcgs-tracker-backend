"""adding new entities

Revision ID: 297068f885a6
Revises: 
Create Date: 2025-07-30 10:11:00.413973

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '297068f885a6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fund_focuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('fund_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('funding_entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('funds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fund_name', sa.String(), nullable=False),
    sa.Column('fund_type_id', sa.Integer(), nullable=False),
    sa.Column('fund_focus_id', sa.Integer(), nullable=False),
    sa.Column('pledge', sa.Float(), nullable=True),
    sa.Column('deposit', sa.Float(), nullable=True),
    sa.Column('approval', sa.Float(), nullable=True),
    sa.Column('disbursement', sa.Float(), nullable=True),
    sa.Column('projects_approved', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fund_focus_id'], ['fund_focuses.id'], ),
    sa.ForeignKeyConstraint(['fund_type_id'], ['fund_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fund_name')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('fund_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['fund_id'], ['funds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('commitments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('amount_usd_thousand', sa.Float(), nullable=False),
    sa.Column('recipient_country_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['funding_entities.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['funding_entities.id'], ),
    sa.ForeignKeyConstraint(['recipient_country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commitments')
    op.drop_table('projects')
    op.drop_table('funds')
    op.drop_table('countries')
    op.drop_table('regions')
    op.drop_table('funding_entities')
    op.drop_table('fund_types')
    op.drop_table('fund_focuses')
    # ### end Alembic commands ###
